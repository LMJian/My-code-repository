
小明正在整理一批历史文献。这些历史文献中出现了很多日期。小明知道这些日期都在1960年1月1日至2059年12月31日。令小明头疼的是，这些日期采用的格式非常不统一，有采用年/月/日的，有采用月/日/年的，还有采用日/月/年的。更加麻烦的是，年份也都省略了前两位，使得文献上的一个日期，存在很多可能的日期与其对应。
比如02/03/04，可能是2002年03月04日、2004年02月03日或2004年03月02日。
给出一个文献上的日期，你能帮助小明判断有哪些可能的日期对其对应吗？

输入
一个日期，格式是"AA/BB/CC"。 (0 <= A, B, C <= 9)
输入
输出若干个不相同的日期，每个日期一行，格式是"yyyy-MM-dd"。多个日期按从早到晚排列。
样例输入
02/03/04
样例输出
2002-03-04
2004-02-03
2004-03-02
资源约定：
峰值内存消耗（含虚拟机） < 256M
CPU消耗 < 1000ms
请严格按要求输出，不要画蛇添足地打印类似：“请您输入…” 的多余内容。
注意：
main函数需要返回0;
只使用ANSI C/ANSI C++ 标准;
不要调用依赖于编译环境或操作系统的特殊函数。
所有依赖的函数必须明确地在源文件中 #include
不能通过工程设置而省略常用头文件。
提交程序时，注意选择所期望的语言类型和编译器类型。

思考

最多可以有三种组合方式，简单来说就是ABC,CAB,CBA。要判断月份，天数是否满足要求，主要注意4，6，9，11小月天数不能为31，闰年的二月是29天，非闰年的二月是28天，根据题目给的时间范围仅凭年份对4取模便已经可以判断是否为闰年。之后排序后输入时注意年份后两位，月份，天数要用%02d输出以保留十位的零

代码

#define _CRT_SECURE_NO_WARNINGS 1
#include <stdio.h>
#include<stdlib.h>
int year[3] = { 0 }, mouth[3] = { 0 }, day[3] = { 0 };
int panduan(int n,int i, int j)
{
	int t = 1;
	if (i ==4 || i == 6 || i == 9 || i == 11)
	{
		if (j == 31)
			t = 0;
	}
	if (n%4==0&&i == 2 && j > 29)
		t = 0;
	if (n % 4 != 0 && i == 2 && j > 28)
		t = 0;
	return t;
}
void paixu(int a[],int i)
{
	int j, k, t;
	for (j = 1; j < i; j++)
	{
		k = j;
		while (a[k] < a[k - 1] && k>0)
		{
			t = year[k];
			year[k] = year[k - 1];
			year[k - 1] = t;
			t = mouth[k];
			mouth[k] = mouth[k - 1];
			mouth[k - 1] = t;
			t = day[k];
			day[k] = day[k - 1];
			day[k - 1] = t;
			k--;
		}
	}
}
int main()
{
	int a, b, c, n = 0,i;
	scanf("%d/%d/%d", &a, &b, &c);
	if (b<=12&&c<=31&&panduan(a,b,c)==1)
	{
		year[n] = a;
		mouth[n] = b;
		day[n] = c;
		n++;
	}
	if (a<=12&&b<=31&&panduan(c,a,b)==1)
	{
		year[n] = c;
		mouth[n] = a;
		day[n] = b;
		n++;
	}
	if (b<=12&&a<=31&&panduan(c,b,a)==1)
	{
		year[n] = c;
		mouth[n] = b;
		day[n] = a;
		n++;
	}
	paixu(day,n);
	paixu(mouth,n);
	paixu(year,n);
	for (i = 0; i < n; i++)
	{
		if(year[i]>59)
			printf("19%02d-%02d-%02d\n", year[i], mouth[i], day[i]);
		else
			printf("20%02d-%02d-%02d\n", year[i], mouth[i], day[i]);
	}
	system("pause");
	return 0;
}
