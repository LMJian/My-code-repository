问题描述
每年冬天，北大未名湖上都是滑冰的好地方。北大体育组准备了许多冰鞋，可是人太多了，每天下午收工后，常常一双冰鞋都不剩。
　　每天早上，租鞋窗口都会排起长龙，假设有还鞋的m个，有需要租鞋的n个。现在的问题是，这些人有多少种排法，可以避免出现体育组没有冰鞋可租的尴尬场面。（两个同样需求的人（比如都是租鞋或都是还鞋）交换位置是同一种排法）
输入格式
　　两个整数，表示m和n
输出格式
　　一个整数，表示队伍的排法的方案数。
样例输入
3 2
样例输出
5
数据规模和约定
　　m,n∈［0,18］
　　问题分析

思考
这几次做的题都可以用递归来做，我们要学会用递归解决问题，要有递归的思想，后面还需加强训练

代码如下
#include<stdio.h>
#include<stdlib.h>
int count = 0;//记录有多少种排法 
int fun(int m, int n, int a)//a为租鞋窗口有多少鞋可租 
{
	if (m < 0 || n < 0 || a < 0)
		return NULL;
	if (m == 0 && n == 0)
		count++;
	fun(m - 1, n, a + 1);//还鞋 
	fun(m, n - 1, a - 1);//租鞋 
	return count;
}
int main()
{
	int m, n;
	printf("请依次输入还鞋和租鞋的人数\n");
	scanf_s("%d%d", &m, &n);
	printf("%d\n", fun(m, n, 0));
	system("pause");
	return 0;
}
