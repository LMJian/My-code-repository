
给定三个整数数组
A = [A1, A2, … AN],
B = [B1, B2, … BN],
C = [C1, C2, … CN]，
请你统计有多少个三元组(i, j, k) 满足：

1 <= i, j, k <= N
Ai < Bj < Ck
【输入格式】
第一行包含一个整数N。
第二行包含N个整数A1, A2, … AN。
第三行包含N个整数B1, B2, … BN。
第四行包含N个整数C1, C2, … CN。
对于30%的数据，1 <= N <= 100
对于60%的数据，1 <= N <= 1000
对于100%的数据，1 <= N <= 100000 0 <= Ai, Bi, Ci <= 100000
【输出格式】
一个整数表示答案
【样例输入】
3
1 1 1
2 2 2
3 3 3
【样例输出】
27
资源约定：
峰值内存消耗（含虚拟机） < 256M
CPU消耗 < 1000ms
请严格按要求输出，不要画蛇添足地打印类似：“请您输入…” 的多余内容。
注意：
main函数需要返回0;
只使用ANSI C/ANSI C++ 标准;
不要调用依赖于编译环境或操作系统的特殊函数。
所有依赖的函数必须明确地在源文件中 #include
不能通过工程设置而省略常用头文件。
提交程序时，注意选择所期望的语言类型和编译器类型。
思路
把A和C数组排序，遍历B数组，对每个Bi二分找A中有多少个比它小的，C中有多少个比它大的，相乘后求和。

代码

#include<stdio.h>
void paixu(int a[],int n)
{
	int i,j,t;
	for(i=1;i<n;i++)
	{
		j=i;
		while(a[j]<a[j-1]&&j>0)
		{
			t=a[j];
			a[j]=a[j-1];
			a[j-1]=t;
			j--;
		}
	}
}
int main()
{
	int n;
	int a[100000]={0},b[100000]={0},c[100000]={0};
	long long i,j,at,ct,he=0;
	scanf("%d",&n);
	for(i=0;i<n;i++)
	scanf("%d",&a[i]);
	for(i=0;i<n;i++)
	scanf("%d",&b[i]);
	for(i=0;i<n;i++)
	scanf("%d",&c[i]);
	paixu(a,n);
	paixu(b,n);
	paixu(c,n);
	for(i=0;i<n;i++)//循环B组 
	{
		at=0;
		ct=0;
		for(j=0;j<n;j++)//循环A组，从最小值开始 
		{
			if(a[j]<b[i])
			at++;
			else
			break;
		}
		for(j=n-1;j>=0;j--)//循环C组，从最大值开始 
		{
			if(b[i]<c[j])
			ct++;
			else
			break;
		}
		he+=at*ct;
	}
	printf("%d\n",he);
	return 0;
 } 
